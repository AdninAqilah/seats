import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class AnnouncementsCustomer extends StatelessWidget {
  const AnnouncementsCustomer({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final annDoc = FirebaseFirestore.instance.collection('restaurants').doc(
        'announcements');

    /*Future deleteData(String id) async{
      final annDoc = FirebaseFirestore.instance.collection('restaurants').doc('announcements');
      final updates = <String, dynamic>{
        id: FieldValue.delete(),
        'annID': {
          id: FieldValue.delete()
        }
      };
      annDoc.update(updates);
    }*/
    
    bool deleteAnnouncement(String from, String until, String id){
      from = from.substring(18);
      from = from.split(',')[0];
      var dateFrom = DateTime.fromMillisecondsSinceEpoch(int.parse(from) * 1000);

      until = until.substring(18);
      until = until.split(',')[0];
      var dateUntil = DateTime.fromMillisecondsSinceEpoch(int.parse(until) * 1000);

      var now = DateTime.now();

      if(now.isBefore(dateFrom)) return false;
      if(now.isAfter(dateUntil)) {
        return false;
      }
      return true;
    }

    return FutureBuilder<DocumentSnapshot>(
        future: annDoc.get(),
        builder: (BuildContext context,
            AsyncSnapshot<DocumentSnapshot> snapshot){
          if (snapshot.hasError) {
            return const Text("Something went wrong");
          }
          if (snapshot.hasData && !snapshot.data!.exists) {
            return const Text("Document does not exist");
          }
          if (snapshot.connectionState == ConnectionState.done) {
            Map<String, dynamic> data = snapshot.data!.data() as Map<String,
                dynamic>;
            int arrLength = data['annID'].length;

            return ListView.builder(
                itemCount: arrLength,
                itemBuilder: (context, index){
                    return Column(
                      children: [
                        if(deleteAnnouncement((data['${data['annID'][index]}'][2]).toString(), (data['${data['annID'][index]}'][3]).toString(), data['annID'][index]))
                          SizedBox(
                            width: 300,
                            child: Card(
                        shadowColor: Colors.amber,
                        color: Colors.amber[100],
                        elevation: 5,
                        child: Padding(
                            padding: const EdgeInsets.all(15),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                  Text(
                                  '${data['${data['${data['annID'][index]}'][0]}']}\n\n'
                                  ,
                                  style: const TextStyle(fontSize: 15, fontWeight: FontWeight.bold),
                                ),
                                Text(
                                    '${data['${data['annID'][index]}'][1]}',
                                  style: const TextStyle(fontSize: 15),
                                ),
                                const SizedBox(
                                  height: 12,
                                ),
                              ],
                            ),
                        ),
                  ),
                          ),
                      ],
                    );
                }
            )
            ;
          }
          return const Text("loading");
        }
    );
  }}
