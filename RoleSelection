import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:fypseats/screens/home/homeCust.dart';

import '../home/home.dart';

class RoleSelection extends StatefulWidget {
  const RoleSelection({Key? key}) : super(key: key);

  @override
  State<RoleSelection> createState() => _RoleSelectionState();
}

class _RoleSelectionState extends State<RoleSelection> {
  int selectedValue = 0;
  bool isPressed = false;
  bool amRM = false;

  void toNext() {
    setRole();
  }

  @override
  Widget build(BuildContext context) {
    if (isPressed && selectedValue == 1) {
      return const HomeCust();
      //Navigator.push(context, MaterialPageRoute(builder: (context) => const HomeCust()));
    } else if (isPressed && selectedValue == 2) {
      return const Home();
    } else {
      return Scaffold(
          appBar: AppBar(
            title: const Text('SEATS'),),
      body: Center(
        child: Column(
          children: [
            const Text('You are a ...', style: TextStyle(fontSize: 15, fontWeight: FontWeight.bold)),
            RadioListTile<int>(
                value: 1, groupValue: selectedValue,
                title: const Text('Customer', style: TextStyle(fontSize: 10, fontWeight: FontWeight.bold), ),
                onChanged: (value) => setState (() => selectedValue = 1)),
            RadioListTile<int>(
                value: 2, groupValue: selectedValue,
                title: const Text('Rest. Manager',  style: TextStyle(fontSize: 10, fontWeight: FontWeight.bold),),
                onChanged: (value) => setState (() => selectedValue = 2)),


            ElevatedButton.icon(
              style: ElevatedButton.styleFrom(
                minimumSize: const Size.fromHeight(50),
              ),
              icon: const Icon(Icons.navigate_next, size: 32,),
              label: const Text(
                'Next',
                style: TextStyle(fontSize: 24),
              ),
              onPressed: toNext,
            ),
          ],
        )
      )
    );
    }
  }

  Future createDoc() async {
    var currentUser = FirebaseAuth.instance.currentUser;
    var uid = currentUser?.uid;

    final snapShot = await FirebaseFirestore.instance
        .collection('restaurants')
        .doc(uid)
        .get();

    final json = {
      'name' : '',
      'operatingDays': [false, false, false, false, false, false, false],
      'openTime': ['1','00', 'AM'],
      'closeTime': ['1','00', 'AM'],
      'logoUrl': '',
      'location': 'no location entered',
      'dishNames': [],
      'dishPrices':[],
      'annNum':[],
    };

    if (!snapShot.exists) {
      try{
      await FirebaseFirestore.instance.collection('restaurants').doc(currentUser?.uid).set(json);
    }catch(e){
      //print(e);
    }
    }

    DatabaseReference ref3 = FirebaseDatabase.instance.ref("uids/$uid");
    DatabaseEvent event3 = await ref3.once();
    if(!event3.snapshot.exists){

    DatabaseReference ref = FirebaseDatabase.instance.ref("/");
    DatabaseReference ref2 = FirebaseDatabase.instance.ref("numOfRests");
    DatabaseReference ref4 = FirebaseDatabase.instance.ref("uids");
    //retrieve numOfRests
    DatabaseEvent event2 = await ref2.once();
    int numOfRests = event2.snapshot.value as int;
    int newNum = numOfRests + 1;
    //add to realtime db
    await ref.update({
      "rest$numOfRests": {
        "name": "unavailable",
        "numOfTables": 0,
        "Queues": {
          "totalQueues": 0
        },
        "dishes": "",
        "prices": "",
        "menuSize": 0,
        "location": "",
      },
      "numOfRests": newNum,
    });

    await ref4.update({
      uid.toString() : "rest$numOfRests",
    });
    }
  }

  Future setRole() async{
    var currentUser = FirebaseAuth.instance.currentUser;
    var uid = currentUser?.uid;
    DatabaseReference ref = FirebaseDatabase.instance.ref("roles/$uid");
    DatabaseReference ref2 = FirebaseDatabase.instance.ref("roles");
    DatabaseEvent event = await ref.once();
    String s = event.snapshot.value as String;
    if(!event.snapshot.exists&&selectedValue==1){
      await ref2.update({
        uid.toString() : "customer",
      });
      setState(()=> isPressed = true);
    }
    else if (!event.snapshot.exists&&selectedValue==2){
      await ref2.update({
        uid.toString() : "manager",
      });
      setState(()=> isPressed = true);
      createDoc();
    }
    else if (selectedValue==1&&s!="customer") {
      showToast();
    }
    else if (selectedValue==2&&s!="manager"){
      showToast();
    } else {
      setState(()=> isPressed = true);
    }
  }

  void showToast() => Fluttertoast.showToast(
    msg: "Please select again",
    fontSize: 18,
  );
  }
