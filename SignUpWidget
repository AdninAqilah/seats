import 'package:email_validator/email_validator.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:fypseats/screens/authenticate/utils.dart';
import '../../main.dart';

class SignUpWidget extends StatefulWidget {
  final Function() onClickedSignIn;
  const SignUpWidget({Key? key, required this.onClickedSignIn}) : super(key: key);

  @override
  State<SignUpWidget> createState() => _SignUpWidgetState();
}

class _SignUpWidgetState extends State<SignUpWidget> {
  final formKey = GlobalKey<FormState>();
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  int selectedValue = 0;

  @override
  void dispose(){
    emailController.dispose();
    passwordController.dispose();

    super.dispose();
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.lightGreen[100],
      appBar: AppBar(
        backgroundColor: Colors.amber[600],
        // elevation: 0.0,
        title: Text('Sign Up to SEATS'),
      ),
      body: Container(
          padding: EdgeInsets.symmetric(vertical: 20.0, horizontal: 50.0),
          child: Form(
            key: formKey,
            child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  SizedBox(height: 40,),
                  TextFormField(
                    controller: emailController,
                    cursorColor: Colors.black,
                    textInputAction: TextInputAction.next,
                    decoration: InputDecoration(labelText: 'Enter Email'),
                    autovalidateMode: AutovalidateMode.onUserInteraction,
                validator: (email) =>
                email != null && EmailValidator.validate(email)
                      ? null
                    : 'Enter a valid email',
                  ),
                  SizedBox(height: 4),
                  TextFormField(
                    controller: passwordController,
                    cursorColor: Colors.black,
                    textInputAction: TextInputAction.done,
                    decoration: InputDecoration(labelText: 'Enter Password'),
                    obscureText: true,
                    autovalidateMode: AutovalidateMode.onUserInteraction,
                    validator: (value) =>
                    value != null && value.length < 6
                        ? 'Enter min. of 6 characters'
                        : null,
                  ),
                      Row(
                        children: <Widget>[
                          SizedBox(child: Text('Login As',  style: TextStyle(fontSize: 10, fontWeight: FontWeight.bold),),
                          width: 27,),
                          Expanded(child: RadioListTile<int>(
                              value: 1, groupValue: selectedValue,
                              title: Text('Customer', style: TextStyle(fontSize: 10, fontWeight: FontWeight.bold), ),
                              onChanged: (value) => setState (() => selectedValue = 1)),
                          ),
                          Expanded(
                            child: RadioListTile<int>(
                                value: 2, groupValue: selectedValue,
                                title: Text('Rest. Manager',  style: TextStyle(fontSize: 10, fontWeight: FontWeight.bold),),
                                onChanged: (value) => setState (() => selectedValue = 2)),
                          )
                        ],
                      ),
                  SizedBox(height: 20),
                  ElevatedButton.icon(
                    style: ElevatedButton.styleFrom(
                      minimumSize: Size.fromHeight(50),
                    ),
                    icon: Icon(Icons.lock_open, size: 32,),
                    label: Text(
                      'Sign Up',
                      style: TextStyle(fontSize: 24),
                    ),
                    onPressed: signUp,
                  ),
                  SizedBox(height: 24),
                  RichText(
                      text: TextSpan(
                          style: TextStyle(color: Colors.black),
                          text: 'Already have an account?   ',
                          children: [
                            TextSpan(
                                recognizer: TapGestureRecognizer()
                                  ..onTap = widget.onClickedSignIn,
                                text: 'Sign In',
                                style: TextStyle(
                                    decoration: TextDecoration.underline,
                                    color: Colors.green
                                )
                            )
                          ]
                      ))
                ]
            ),

          )
      ),
    );
  }

  //here
  Future signUp() async {
    final isValid = formKey.currentState!.validate();
    if (!isValid) return;

    //Authenticate(selectedValue: selectedValue,);

    showDialog(
        context: context,
        barrierDismissible: false,
        builder: (context) => Center(child: CircularProgressIndicator()));

    try {
      await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: emailController.text.trim(),
        password: passwordController.text.trim(),
      );
    } on FirebaseAuthException catch (e) {
      Utils.showSnackBar(e.message);
      print(e);
    }

    navigatorKey.currentState!.popUntil((route) => route.isFirst);
  }

}
